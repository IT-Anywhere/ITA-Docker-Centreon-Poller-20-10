# START Trap Infofile fujitsu/ServerViewSuite/nagios/trap/trapconf/fj/SC2.cfg
# Date		Thu Mar  7 09:55:45 2019
# MIB 		FSC-SERVERCONTROL2-MIB
# ENTERPRISE 	1.3.6.1.4.1.231.2.10.2.2.10.20

# HINT: This configuration file contains commented EXEC lines in which,
#       as a sample, the Nagios script submit_check_result is entered.
#       In this commented calls the original MIB status values are written.
#       These status values have to be replaced by an integer 
#         0 (OK), 1 (WARNING) or 2 (CRITICAL). 
#       The placeholders <path> and <service> have to be replaced with to-be-used
#       script path resp. configured passive NAGIOS service.
#       Alternatively you may execute a different cmd. of your own choice.

EVENT sc2TrapTest .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2000 "Status Event" Normal
# --#SUMMARY Test trap from server %s (no error).
# --#ARGUMENTS { 0 }
FORMAT Test trap from server $1 (no error).
SDESC
Test trap to verify trap connection.
Note: This is no error condition.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapCommunicationFailure .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2001 "Status Event" Minor
# --#SUMMARY Communication with the Server Management controller in cabinet %d of server %s lost.
# --#ARGUMENTS { 2, 0 }
FORMAT Communication with the Server Management controller in cabinet $3 of server $1 lost.
SDESC
The communication with management controller failed!
EDESC
#EXEC <path>/submit_check_result $A <service> <MINOR> "$Fz"

EVENT sc2TrapCommunicationEstablished .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2002 "Status Event" Normal
# --#SUMMARY Communication with the Server Management controller in cabinet %d of server %s established again.
# --#ARGUMENTS { 2, 0 }
FORMAT Communication with the Server Management controller in cabinet $3 of server $1 established again.
SDESC
The communication with the management controller was reestablished
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapControllerSelftestWarning .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2003 "Status Event" Minor
# --#SUMMARY The Server Management controller in cabinet %d has detected an minor problem during selftest of server %s.
# --#ARGUMENTS { 2, 0 }
FORMAT The Server Management controller in cabinet $3 has detected an minor problem during selftest of server $1.
SDESC
Controller selftest warning.
EDESC
#EXEC <path>/submit_check_result $A <service> <MINOR> "$Fz"

EVENT sc2TrapControllerSelftestError .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2004 "Status Event" Critical
# --#SUMMARY The Server Management controller in cabinet %d of server %s failed.
# --#ARGUMENTS { 2, 0 }
FORMAT The Server Management controller in cabinet $3 of server $1 failed.
SDESC
Controller selftest error.
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapBiosSelftestError .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2005 "Status Event" Critical
# --#SUMMARY A critical error happend while BIOS selftest in cabinet %d of server %s. See server management message log (recovery log) for detailed information.
# --#ARGUMENTS { 2, 0 }
FORMAT A critical error happend while BIOS selftest in cabinet $3 of server $1. See server management message log (recovery log) for detailed information.
SDESC
A critical error happend while BIOS selftest. This error needs to be acknowledged to clear the error condition.
Action: See message log (recovery log) to get the error reason and fix the problem.
Press 'Acknowledge BIOS selftest status' in ServerView to get the
error condition cleared when the problem is fixed.
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapSevereSystemError .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2006 "Status Event" Critical
# --#SUMMARY The system was restarted after a severe problem at cabinet %d of server %s. See server management message log (recovery log) for detailed information.
# --#ARGUMENTS { 2, 0 }
FORMAT The system was restarted after a severe problem at cabinet $3 of server $1. See server management message log (recovery log) for detailed information.
SDESC
The system was restarted after a severe problem. See server management message log (recovery log) for detailed information.
Action: See message log (recovery log) to get the error reason and fix the problem.
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapFanAdded .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2010 "Status Event" Normal
# --#SUMMARY Cooling device '%s' was inserted into cabinet %d of server %s.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Cooling device '$4' was inserted into cabinet $3 of server $1.
SDESC
The indicated hot-plug fan or liquid pump was inserted.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapFanRemoved .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2011 "Status Event" Normal
# --#SUMMARY Cooling device '%s' was removed from cabinet %d of server %s.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Cooling device '$4' was removed from cabinet $3 of server $1.
SDESC
The indicated hot-plug fan or liquid pump was removed.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapFanOk .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2012 "Status Event" Normal
# --#SUMMARY Cooling device '%s' in cabinet %d of server %s is working again.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Cooling device '$4' in cabinet $3 of server $1 is working again.
SDESC
The indicated fan or liquid pump is working again.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapFanCritical .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2013 "Status Event" Major
# --#SUMMARY Cooling device '%s' will fail in near future in cabinet %d of server %s.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Cooling device '$4' will fail in near future in cabinet $3 of server $1.
SDESC
The indicated fan or liquid pump became critical
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapFanFailed .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2014 "Status Event" Critical
# --#SUMMARY Cooling device '%s' failed in cabinet %d of server '%s'.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Cooling device '$4' failed in cabinet $3 of server '$1'.
SDESC
The indicated fan or liquid pump failed.
Action: Replace defect fan or liquid pump. Attention: Do not operate system with cover removed. Proper airflow will not be guaranteed!
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapRedundantFanFailed .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2015 "Status Event" Major
# --#SUMMARY The redundant cooling device '%s' failed in cabinet %d of server %s. System can become critical if another cooling device in this group fails.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT The redundant cooling device '$4' failed in cabinet $3 of server $1. System can become critical if another cooling device in this group fails.
SDESC
The indicated redundant fan or liquid pump failed
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapTempOk .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2020 "Status Event" Normal
# --#SUMMARY Temperature at sensor '%s' in cabinet %d of server %s is within normal range.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Temperature at sensor '$4' in cabinet $3 of server $1 is within normal range.
SDESC
The temperature of the indicated sensor has decreased to the normal level.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapTempWarning .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2021 "Status Event" Major
# --#SUMMARY Temperature at sensor '%s' in cabinet %d of server %s has reached the warning level.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Temperature at sensor '$4' in cabinet $3 of server $1 has reached the warning level.
SDESC
The temperature of the indicated sensor has reached the warning level.
Action: Check fan openings.
Check fans.
 Reduce ambient temperature. Attention: Do not operate system with cover removed. Proper airflow will not be guaranteed!
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapTempCritical .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2022 "Status Event" Critical
# --#SUMMARY Temperature at sensor '%s' in cabinet %d of server %s has reached the critical level.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Temperature at sensor '$4' in cabinet $3 of server $1 has reached the critical level.
SDESC
The temperature of the indicated sensor is out of tolerance range. The system will shut down and power off if shutdown is enabled.
Action: Check fan openings
Check fans
Reduce ambient temperature.
Let the system cool down before restart. Attention: Do not operate system with cover removed. Proper airflow will not be guaranteed!
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapTempSensorOk .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2023 "Status Event" Normal
# --#SUMMARY Temperature sensor '%s' in cabinet %d of server %s is working again.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Temperature sensor '$4' in cabinet $3 of server $1 is working again.
SDESC
The indicated broken temperature sensor is OK again.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapTempSensorBroken .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2024 "Status Event" Major
# --#SUMMARY Temperature sensor '%s' in cabinet %d of server %s is broken or not connected.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Temperature sensor '$4' in cabinet $3 of server $1 is broken or not connected.
SDESC
The indicated temperature sensor is broken.
Action: Check connection or replace temperature sensor.
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapPowerSupplyAdded .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2030 "Status Event" Normal
# --#SUMMARY Power supply '%s' in cabinet %d at server %s was added.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Power supply '$4' in cabinet $3 at server $1 was added.
SDESC
One hot-replace power supply was added.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapPowerSupplyRemoved .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2031 "Status Event" Normal
# --#SUMMARY Power supply '%s' in cabinet %d at server %s was removed
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Power supply '$4' in cabinet $3 at server $1 was removed
SDESC
One hot-replace power supply was removed
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapPowerSupplyOk .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2032 "Status Event" Normal
# --#SUMMARY Power supply '%s' in cabinet %d at server %s is working again.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Power supply '$4' in cabinet $3 at server $1 is working again.
SDESC
Power supply is working again.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapPowerSupplyCritical .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2033 "Status Event" Critical
# --#SUMMARY Insufficient operating power supplies available in cabinet %d at server %s.
# --#ARGUMENTS { 2, 0 }
FORMAT Insufficient operating power supplies available in cabinet $3 at server $1.
SDESC
Power supply status has become critical.
Action: Replace defective power supply.
Install additional power supply.
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapPowerSupplyFailed .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2034 "Status Event" Major
# --#SUMMARY Power supply '%s' in cabinet %d at server %s failed.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Power supply '$4' in cabinet $3 at server $1 failed.
SDESC
One hot-replace power supply failed.
Action: Replace defect power supply. Attention: Power supply redundancy is lost. To restore redundancy replace defect power supply as soon as possible!
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapRedundantPowerSupplyFailed .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2035 "Status Event" Major
# --#SUMMARY Redundant power supply '%s' in cabinet %d at server %s failed. System can become critical if another power supply fails.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Redundant power supply '$4' in cabinet $3 at server $1 failed. System can become critical if another power supply fails.
SDESC
One redundant hot-replace power supply failed
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapPowerSupplyRedundancyLost .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2036 "Status Event" Minor
# --#SUMMARY Power supply redundancy in cabinet %d at server %s lost. System will become critical if a power supply fails.
# --#ARGUMENTS { 2, 0 }
FORMAT Power supply redundancy in cabinet $3 at server $1 lost. System will become critical if a power supply fails.
SDESC
Power supply redundancy no longer available.
EDESC
#EXEC <path>/submit_check_result $A <service> <MINOR> "$Fz"

EVENT sc2TrapPowerSupplyCriticalTemperature .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2037 "Status Event" Critical
# --#SUMMARY Temperature at power supply '%s' in cabinet %d of server %s has reached the critical level.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Temperature at power supply '$4' in cabinet $3 of server $1 has reached the critical level.
SDESC
Critical temperature in power supply.
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapPowerSupplyFanFailurePrediction .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2038 "Status Event" Major
# --#SUMMARY Fan failure is predicted at power supply '%s' in cabinet %d of server %s.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Fan failure is predicted at power supply '$4' in cabinet $3 of server $1.
SDESC
Fan failure prediction in power supply.
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapPowerSupplyFanFailure .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2039 "Status Event" Critical
# --#SUMMARY Fan failure at power supply '%s' in cabinet %d of server %s.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Fan failure at power supply '$4' in cabinet $3 of server $1.
SDESC
Fan failure in power supply.
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapAcFail .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2040 "Status Event" Critical
# --#SUMMARY AC failure in cabinet %d of server %s.
# --#ARGUMENTS { 2, 0 }
FORMAT AC failure in cabinet $3 of server $1.
SDESC
Mains failed in the specified cabinet. This trap can only happen in storage extension cabinets without UPS or BBU. A server will not have time to send this trap.
Action: Check line voltage / power supply of cabinet.
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapDcFail .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2041 "Status Event" Critical
# --#SUMMARY DC power failure in cabinet %d of server %s.
# --#ARGUMENTS { 2, 0 }
FORMAT DC power failure in cabinet $3 of server $1.
SDESC
DC power failed in the specified cabinet. This is the result of the system's power-good sensor monitoring. The system may stop when this condition occurs.
Action: Check power supply units; add additional power supply.
Replace power supply unit(s); check AC power.
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapOnBattery .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2042 "Status Event" Critical
# --#SUMMARY AC failure. Cabinet %d at server %s is running on battery power. The remaining battery lifetime is approximately %d minutes.
# --#ARGUMENTS { 2, 0, 3 }
FORMAT AC failure. Cabinet $3 at server $1 is running on battery power. The remaining battery lifetime is approximately $4 minutes.
SDESC
The server is operating on battery power - by UPS or backup battery unit (BBU).
Action: Check mains line voltage.
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapOnMains .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2043 "Status Event" Normal
# --#SUMMARY Mains returned after power failure in cabinet %d at server %s.
# --#ARGUMENTS { 2, 0 }
FORMAT Mains returned after power failure in cabinet $3 at server $1.
SDESC
The mains voltage returned after a power failure.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapVoltageOk .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2050 "Status Event" Normal
# --#SUMMARY Power supply voltage '%s' in cabinet %d at server %s is within normal range again.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Power supply voltage '$4' in cabinet $3 at server $1 is within normal range again.
SDESC
Power supply voltage is within normal range again.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapVoltageTooLow .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2051 "Status Event" Critical
# --#SUMMARY Power supply voltage '%s' in cabinet %d at server %s is too low.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Power supply voltage '$4' in cabinet $3 at server $1 is too low.
SDESC
Power supply voltage is too low.
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapVoltageTooHigh .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2052 "Status Event" Critical
# --#SUMMARY Power supply voltage '%s' in cabinet %d at server %s is too high.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Power supply voltage '$4' in cabinet $3 at server $1 is too high.
SDESC
Power supply voltage is too high.
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapVoltageFailed .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2053 "Status Event" Critical
# --#SUMMARY Power supply voltage '%s' in cabinet %d at server %s is out of range.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Power supply voltage '$4' in cabinet $3 at server $1 is out of range.
SDESC
Power supply voltage is out of range.
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapBatteryVoltagePrefail .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2054 "Status Event" Major
# --#SUMMARY Battery voltage '%s' in cabinet %d at server %s: Battery is predicted to fail in near future.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Battery voltage '$4' in cabinet $3 at server $1: Battery is predicted to fail in near future.
SDESC
Battery is predicted to fail
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapCorrectableMemErrorAddr .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2060 "Status Event" Normal
# --#SUMMARY Correctable memory error at address %d in cabinet %d of server %s.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Correctable memory error at address $4 in cabinet $3 of server $1.
SDESC
A correctable memory error at specified address was detected.
Action: In case of a persistent error try to locate defect memory module:
Go to window View / System Board / Memory Modules.
Replace defect memory module.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapUncorrectableMemErrorAddr .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2061 "Status Event" Critical
# --#SUMMARY Uncorrectable memory error at address %d in cabinet %d of server %s.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Uncorrectable memory error at address $4 in cabinet $3 of server $1.
SDESC
An uncorrectable memory error at specified address was detected.
Action: Try to locate defect memory module:
Go to window View / System Board / Memory Modules.
Replace defect memory module.
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapCorrectableMemErrorBank .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2062 "Status Event" Normal
# --#SUMMARY Correctable memory error at bank '%s' in cabinet %d of server %s.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Correctable memory error at bank '$4' in cabinet $3 of server $1.
SDESC
A correctable memory error at specified bank was detected.
Action: In case of a persistent error try to locate defect memory module:
Go to window View / System Board / Memory Modules.
Replace defect memory module.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapUncorrectableMemErrorBank .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2063 "Status Event" Critical
# --#SUMMARY Uncorrectable memory error at bank '%s' in cabinet %d of server %s.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Uncorrectable memory error at bank '$4' in cabinet $3 of server $1.
SDESC
An uncorrectable memory error at specified bank was detected.
Action: Try to locate defect memory module:
Go to window View / System Board / Memory Modules.
Replace defect memory module
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapCorrectableMemErrorModule .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2064 "Status Event" Normal
# --#SUMMARY Correctable memory error at module '%s' in cabinet %d of server %s.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Correctable memory error at module '$4' in cabinet $3 of server $1.
SDESC
A correctable memory error at specified module was detected.
Action: In case of a persistent error try to locate defect memory module:
Go to window View / System Board / Memory Modules.
Replace defect memory module.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapUncorrectableMemErrorModule .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2065 "Status Event" Critical
# --#SUMMARY Uncorrectable memory error at module '%s' in cabinet %d of server %s.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Uncorrectable memory error at module '$4' in cabinet $3 of server $1.
SDESC
An uncorrectable memory error at specified module was detected.
Action: Try to locate defect memory module:
Go to window View / System Board / Memory Modules.
Replace defect memory module.
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapCorrectableMemError .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2066 "Status Event" Normal
# --#SUMMARY Correctable memory error in cabinet %d of server %s.
# --#ARGUMENTS { 2, 0 }
FORMAT Correctable memory error in cabinet $3 of server $1.
SDESC
A correctable memory error at unknown location was detected.
Action: In case of a persistent error try to locate defect memory module:
Go to window View / System Board / Memory Modules.
Replace defect memory module.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapUncorrectableMemError .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2067 "Status Event" Critical
# --#SUMMARY Uncorrectable memory error in cabinet %d of server %s.
# --#ARGUMENTS { 2, 0 }
FORMAT Uncorrectable memory error in cabinet $3 of server $1.
SDESC
An uncorrectable memory error at unknown location was detected.
Action: Try to locate defect memory module:
Go to window View / System Board / Memory Modules.
Replace defect memory module.
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapMemErrorModulePrefail .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2068 "Status Event" Major
# --#SUMMARY Memory module failure is predicted for module '%s' in cabinet %d of server %s.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Memory module failure is predicted for module '$4' in cabinet $3 of server $1.
SDESC
A memory module is predicted to fail (prefailure).
Warning: A memory module failure is predicted. Too many errors have occured implying that the module could fail in near future. Action: Replace the failing module.
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapMemErrorModuleFailing .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2069 "Status Event" Critical
# --#SUMMARY Memory module '%s' in cabinet %d of server %s is failing. Too many errors have occured.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Memory module '$4' in cabinet $3 of server $1 is failing. Too many errors have occured.
SDESC
A memory module is failing.
Warning: A memory module is failing. Action: Replace the failing module immediately!
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapMemErrorModuleReplaced .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2070 "Status Event" Major
# --#SUMMARY Memory module '%s' in cabinet %d of server %s had failed and was replaced by a hot-spare module
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Memory module '$4' in cabinet $3 of server $1 had failed and was replaced by a hot-spare module
SDESC
A memory module had failed and was replaced by a hot-spare module.
Warning: A memory module had failed. So many errors had occured that its bank was taken out of service and replaced by a hot-spare bank. Action: Replace the failed module immediately!
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapMemErrorLoggingDisabled .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2071 "Status Event" Minor
# --#SUMMARY Too many correctable memory errors in cabinet %d at server %s. Error logging was disabled.\nIf logging was disabled and not automatically enabled again, you have to reboot your server to enable memory error logging again.\nIf logging is disabled, prefailure detection is also not active!
# --#ARGUMENTS { 2, 0 }
FORMAT Too many correctable memory errors in cabinet $3 at server $1. Error logging was disabled.\nIf logging was disabled and not automatically enabled again, you have to reboot your server to enable memory error logging again.\nIf logging is disabled, prefailure detection is also not active!
SDESC
Too many correctable memory errors; logging disabled.
ATTENTION! If logging was disabled and not automatically enabled again, you have
to reboot your server to enable memory error logging again.
If logging disabled, prefailure detection does not work!
EDESC
#EXEC <path>/submit_check_result $A <service> <MINOR> "$Fz"

EVENT sc2TrapMemErrorLoggingEnabled .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2072 "Status Event" Minor
# --#SUMMARY Error logging was enabled again in cabinet %d at server %s (after being disabled because of too many errors)
# --#ARGUMENTS { 2, 0 }
FORMAT Error logging was enabled again in cabinet $3 at server $1 (after being disabled because of too many errors)
SDESC
Memory errors logging enabled again.
Error logging was enabled again after being disabled because of too many errors.
EDESC
#EXEC <path>/submit_check_result $A <service> <MINOR> "$Fz"

EVENT sc2TrapMemErrorAnyModuleReplaced .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2073 "Status Event" Major
# --#SUMMARY A memory module in cabinet %d of server %s had failed and was replaced by a hot-spare module
# --#ARGUMENTS { 2, 0 }
FORMAT A memory module in cabinet $3 of server $1 had failed and was replaced by a hot-spare module
SDESC
A memory module had failed and was replaced by a hot-spare module.
Warning: A memory module had failed. So many errors had occured that its bank was taken out of service and replaced by a hot-spare bank. Action: Replace the failed module immediately!
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapMemErrorRedundancyLost .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2074 "Status Event" Major
# --#SUMMARY Memory configuration in cabinet %d of server %s has lost redundancy
# --#ARGUMENTS { 2, 0 }
FORMAT Memory configuration in cabinet $3 of server $1 has lost redundancy
SDESC
A memory error caused loss of memory redundancy
Warning: A severe memory error occured. Memory redundancy is lost. Action: Replace failing module as soon as possible to regain redundancy!
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapCpuSpeedChanged .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2080 "Status Event" Normal
# --#SUMMARY CPU speed at server %s changed to %d percent of its maximum speed.
# --#ARGUMENTS { 0, 2 }
FORMAT CPU speed at server $1 changed to $3 percent of its maximum speed.
SDESC
This trap will be sent if the CPU clock frequency was changed because of a temperature problem.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapCpuPrefail .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2081 "Status Event" Major
# --#SUMMARY CPU failure is predicted for CPU '%s' in cabinet %d of server %s.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT CPU failure is predicted for CPU '$4' in cabinet $3 of server $1.
SDESC
A CPU is predicted to fail (prefailure).
Warning: A CPU failure is predicted. Too many errors have occured implying that the CPU could fail in near future. Action: Replace the failing CPU.
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapCpuIerr .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2082 "Status Event" Major
# --#SUMMARY Internal error (IERR) occurred on CPU '%s' in cabinet %d of server %s.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Internal error (IERR) occurred on CPU '$4' in cabinet $3 of server $1.
SDESC
A CPU internal error (IERR) occurred
Warning: CPU internal error (IERR) occurred. Action: Replace failing CPU if error occurs repeatedly.
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapCpuDisabled .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2083 "Status Event" Major
# --#SUMMARY CPU '%s' in cabinet %d of server %s is disabled.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT CPU '$4' in cabinet $3 of server $1 is disabled.
SDESC
A CPU is disabled by BIOS
Warning: CPU was disabled by BIOS after CPU Error occurred. Action: Reenable CPU. If error persists, replace failing CPU.
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapCabinetSwitchedOff .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2090 "Status Event" Normal
# --#SUMMARY Cabinet %d was switched off because of %s (server %s).
# --#ARGUMENTS { 2, 3, 0 }
FORMAT Cabinet $3 was switched off because of $4 (server $1).
SDESC
This trap will be sent when a cabinet is switched off. For obvious reasons it cannot be sent when the main cabinet is switched off.
Note: For obvious reasons this trap cannot be sent when the main cabinet is switched off.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapCabinetSwitchedOn .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2091 "Status Event" Normal
# --#SUMMARY Cabinet %d was switched on because of %s (server %s).
# --#ARGUMENTS { 2, 3, 0 }
FORMAT Cabinet $3 was switched on because of $4 (server $1).
SDESC
This trap will be sent when a cabinet is switched on.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapPowerOffTimeReached .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2092 "Status Event" Normal
# --#SUMMARY The scheduled power-off time is reached in cabinet %d on server %s! System shutdown in %d minutes.
# --#ARGUMENTS { 2, 0, 3 }
FORMAT The scheduled power-off time is reached in cabinet $3 on server $1! System shutdown in $4 minutes.
SDESC
This trap is sent when the server is going to be switched off by schedule in some minutes.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapServerShutdown .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2093 "Status Event" Normal
# --#SUMMARY The reason %s causes a shutdown at server %s.
# --#ARGUMENTS { 2, 0 }
FORMAT The reason $3 causes a shutdown at server $1.
SDESC
This trap will be sent when a server is being shut down.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapShutdownCancelled .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2094 "Status Event" Normal
# --#SUMMARY Shutdown at server %s cancelled by the user.
# --#ARGUMENTS { 0 }
FORMAT Shutdown at server $1 cancelled by the user.
SDESC
This trap will be sent if a pending server shutdown was cancelled by the user.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapBootRetryCountZero .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2095 "Status Event" Major
# --#SUMMARY Boot retry counter is zero on server %s.
# --#ARGUMENTS { 0 }
FORMAT Boot retry counter is zero on server $1.
SDESC
This trap will be sent when a boot retry counter gets zero on power up.
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapServerBoot .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2096 "Status Event" Normal
# --#SUMMARY Server %s was booted.
# --#ARGUMENTS { 0 }
FORMAT Server $1 was booted.
SDESC
This trap will be sent when the server was booted
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapServerStandby .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2097 "Status Event" Normal
# --#SUMMARY Server %s entered standby mode.
# --#ARGUMENTS { 0 }
FORMAT Server $1 entered standby mode.
SDESC
This trap will be sent when the server entered standby mode
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapServerSuspend .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2098 "Status Event" Normal
# --#SUMMARY Server %s entered suspend mode.
# --#ARGUMENTS { 0 }
FORMAT Server $1 entered suspend mode.
SDESC
This trap will be sent when the server entered suspend mode
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapServerResumed .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2099 "Status Event" Normal
# --#SUMMARY Server %s resumed from standby or suspend mode.
# --#ARGUMENTS { 0 }
FORMAT Server $1 resumed from standby or suspend mode.
SDESC
This trap will be sent when the server resumed from standby or suspend mode
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapMessageLogFull .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2100 "Status Event" Minor
# --#SUMMARY The System Event Log on server %s in cabinet %d is full. No more messages can be logged! Please clear unneeded log entries as soon as possible!
# --#ARGUMENTS { 0, 2 }
FORMAT The System Event Log on server $1 in cabinet $3 is full. No more messages can be logged! Please clear unneeded log entries as soon as possible!
SDESC
The System Event Log (message log) is full. No more messages can be logged. This trap will not occur on wrap-around log types
EDESC
#EXEC <path>/submit_check_result $A <service> <MINOR> "$Fz"

EVENT sc2TrapMessageLogWarning .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2101 "Status Event" Minor
# --#SUMMARY The System Event Log for cabinet %d at server %s has exceeded %d percent of its capacity.
# --#ARGUMENTS { 2, 0, 3 }
FORMAT The System Event Log for cabinet $3 at server $1 has exceeded $4 percent of its capacity.
SDESC
The warning threshold for the number of System Event Log entries has been exceeded.
EDESC
#EXEC <path>/submit_check_result $A <service> <MINOR> "$Fz"

EVENT sc2TrapBootMessageLogEntry .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2102 "Status Event" Major
# --#SUMMARY An error was recorded on server %s before the management agents were started (boot phase).\nSee server management message log (Recovery log) for detailed information.
# --#ARGUMENTS { 0 }
FORMAT An error was recorded on server $1 before the management agents were started (boot phase).\nSee server management message log (Recovery log) for detailed information.
SDESC
An error message was written into the systemboard
This could have happened when an error occured before the server management agents were running or
any error without a specific trap. See server management message log
for detailed error description.
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapIntrusionAssertion .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2110 "Status Event" Major
# --#SUMMARY The front door or housing of cabinet %d was opened on server %s.
# --#ARGUMENTS { 2, 0 }
FORMAT The front door or housing of cabinet $3 was opened on server $1.
SDESC
The front door or housing was opened
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapIntrusionDeassertion .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2111 "Status Event" Normal
# --#SUMMARY The front door or housing of cabinet %d was closed on server %s.
# --#ARGUMENTS { 2, 0 }
FORMAT The front door or housing of cabinet $3 was closed on server $1.
SDESC
The front door or housing was closed
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapIntrusionChanged .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2112 "Status Event" Major
# --#SUMMARY The front door or housing of cabinet %d was opened or closed on server %s.
# --#ARGUMENTS { 2, 0 }
FORMAT The front door or housing of cabinet $3 was opened or closed on server $1.
SDESC
The front door or housing was opened or closed
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapPciBusError .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2113 "Status Event" Critical
# --#SUMMARY A PCI bus system or parity error happened in cabinet %d on server %s.
# --#ARGUMENTS { 2, 0 }
FORMAT A PCI bus system or parity error happened in cabinet $3 on server $1.
SDESC
PCI bus system/parity error
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapPowerOnTimeReached .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2114 "Status Event" Normal
# --#SUMMARY The scheduled power-on time is reached in cabinet %d on server %s! System will be powered on in %d minutes.
# --#ARGUMENTS { 2, 0, 3 }
FORMAT The scheduled power-on time is reached in cabinet $3 on server $1! System will be powered on in $4 minutes.
SDESC
This trap is sent when the server is going to be switched on by schedule in some minutes. It will be sent by the Remote Management Controller.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapCssWarning .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2120 "Status Event" Major
# --#SUMMARY Warning status on component '%s' in cabinet %d of server '%s'. This component may be replaced by the customer.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Warning status on component '$4' in cabinet $3 of server '$1'. This component may be replaced by the customer.
SDESC
Customer self service component changed to warning status
Action: Replace affected component, may be replaced by the customer!
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapCssFail .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2121 "Status Event" Major
# --#SUMMARY Fail status on component '%s' in cabinet %d of server '%s'. This component may be replaced by the customer.
# --#ARGUMENTS { 3, 2, 0 }
FORMAT Fail status on component '$4' in cabinet $3 of server '$1'. This component may be replaced by the customer.
SDESC
Customer self service component changed to fail status
Action: Replace affected component, may be replaced by the customer!
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapCssWarningServer .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2122 "Status Event" Major
# --#SUMMARY Warning status on component '%s' at server '%s'. This component may be replaced by the customer.
# --#ARGUMENTS { 2, 0 }
FORMAT Warning status on component '$3' at server '$1'. This component may be replaced by the customer.
SDESC
Customer self service component changed to warning status
Action: Replace affected component, may be replaced by the customer!
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapCssFailServer .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2123 "Status Event" Major
# --#SUMMARY Fail status on component '%s' at server '%s'. This component may be replaced by the customer.
# --#ARGUMENTS { 2, 0 }
FORMAT Fail status on component '$3' at server '$1'. This component may be replaced by the customer.
SDESC
Customer self service component changed to fail status
Action: Replace affected component, may be replaced by the customer!
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapPowerLimitOk .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2130 "Status Event" Normal
# --#SUMMARY Power limit status in cabinet %d of server '%s' ok.
# --#ARGUMENTS { 2, 0 }
FORMAT Power limit status in cabinet $3 of server '$1' ok.
SDESC
Power consumption limit changed to Ok status
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapPowerLimitWarning .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2131 "Status Event" Major
# --#SUMMARY Power limit status in cabinet %d of server '%s' has exceeded the warning threshold.
# --#ARGUMENTS { 2, 0 }
FORMAT Power limit status in cabinet $3 of server '$1' has exceeded the warning threshold.
SDESC
Power consumption limit changed to warning status
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

EVENT sc2TrapPowerLimitCritical .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2132 "Status Event" Critical
# --#SUMMARY Power limit status in cabinet %d of server '%s' has exceeded the critical threshold.
# --#ARGUMENTS { 2, 0 }
FORMAT Power limit status in cabinet $3 of server '$1' has exceeded the critical threshold.
SDESC
Power consumption limit changed to critical status
EDESC
#EXEC <path>/submit_check_result $A <service> <CRITICAL> "$Fz"

EVENT sc2TrapPowerLimitDisabled .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2133 "Status Event" Normal
# --#SUMMARY Power limiting in cabinet %d of server '%s' disabled.
# --#ARGUMENTS { 2, 0 }
FORMAT Power limiting in cabinet $3 of server '$1' disabled.
SDESC
Power consumption limiting disabled
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapViomInitiateCommunication .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2140 "Status Event" Normal
# --#SUMMARY VIOM communication initiation request from server %s.
# --#ARGUMENTS { 0 }
FORMAT VIOM communication initiation request from server $1.
SDESC
VIOM communication initiation request - VIOM manager action required.
This trap is intended to signal the Virtual IO Manager that the iRMC wants to confirm the usage of the VIOM table.
This trap may be repeated several times until the manager responds to the trap.
Note: This is no error condition.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapViomStatusChanged .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2141 "Status Event" Normal
# --#SUMMARY VIOM status has changed on server %s.
# --#ARGUMENTS { 0 }
FORMAT VIOM status has changed on server $1.
SDESC
VIOM status has changed - VIOM manager information.
If the user or a server management component deactivates VIOM, the iRMC will send a VIOM status trap.
This trap will not be sent if VIOM was activated, because no user interface except the Virtual IO Manager shall be capable to enable VIOM.
Note: This is no error condition.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapDrvMonEventMessage .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2150 "Status Event" Normal
# --#SUMMARY Driver Monitoring information event at server %s:\n%s
# --#ARGUMENTS { 0, 2 }
FORMAT Driver Monitoring information event at server $1:\n$3
SDESC
Driver Monitoring detected an informational event.
EDESC
#EXEC <path>/submit_check_result $A <service> <INFORMATIONAL> "$Fz"

EVENT sc2TrapDrvMonEventWarning .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2151 "Status Event" Minor
# --#SUMMARY Driver Monitoring warning event at server %s:\n%s
# --#ARGUMENTS { 0, 2 }
FORMAT Driver Monitoring warning event at server $1:\n$3
SDESC
Driver Monitoring detected a warning event.
EDESC
#EXEC <path>/submit_check_result $A <service> <MINOR> "$Fz"

EVENT sc2TrapDrvMonEventError .1.3.6.1.4.1.231.2.10.2.2.10.20.0.2152 "Status Event" Major
# --#SUMMARY Driver Monitoring error event at server %s:\n%s
# --#ARGUMENTS { 0, 2 }
FORMAT Driver Monitoring error event at server $1:\n$3
SDESC
Driver Monitoring detected an error event.
EDESC
#EXEC <path>/submit_check_result $A <service> <MAJOR> "$Fz"

# END Trap Infofile fujitsu/ServerViewSuite/nagios/trap/trapconf/fj/SC2.cfg

